import{r as o}from"./react.56e6c9f0.js";const f=typeof window<"u"?o.exports.useLayoutEffect:o.exports.useEffect;function d(r,t,n,a){const s=o.exports.useRef(t);f(()=>{s.current=t},[t]),o.exports.useEffect(()=>{const c=(n==null?void 0:n.current)||window;if(!(c&&c.addEventListener))return;const u=e=>s.current(e);return c.addEventListener(r,u,a),()=>{c.removeEventListener(r,u)}},[r,n,a])}function w(r){const t=o.exports.useRef(()=>{throw new Error("Cannot call an event handler while rendering.")});return f(()=>{t.current=r},[r]),o.exports.useCallback((...n)=>t.current(...n),[t])}function p(r,t){const n=o.exports.useCallback(()=>{if(typeof window>"u")return t;try{const e=window.localStorage.getItem(r);return e?g(e):t}catch(e){return console.warn(`Error reading localStorage key \u201C${r}\u201D:`,e),t}},[t,r]),[a,s]=o.exports.useState(n),c=w(e=>{typeof window>"u"&&console.warn(`Tried setting localStorage key \u201C${r}\u201D even though environment is not a client`);try{const i=e instanceof Function?e(a):e;window.localStorage.setItem(r,JSON.stringify(i)),s(i),window.dispatchEvent(new Event("local-storage"))}catch(i){console.warn(`Error setting localStorage key \u201C${r}\u201D:`,i)}});o.exports.useEffect(()=>{s(n())},[]);const u=o.exports.useCallback(e=>{(e==null?void 0:e.key)&&e.key!==r||s(n())},[r,n]);return d("storage",u),d("local-storage",u),[a,c]}function g(r){try{return r==="undefined"?void 0:JSON.parse(r!=null?r:"")}catch{console.log("parsing error on",{value:r});return}}export{p as u};
